{"version":3,"sources":["customizer/global-body.js"],"names":["define","$","Utils","SELECTOR","BASE","FONTFAMILY","FONTSIZE","FONTWEIGHT","TEXTTRANSFORM","LINEHEIGHT","TEXTCOLOR","LINKCOLOR","LINKHOVERCOLOR","apply","color","linkColor","linkHoverColor","putStyle","fontfamily","concat","val","fontSize","fontWeight","textTransform","lineHeight","content","replaceAll","deviceWidth","mobile","tablet","getContent","spectrum","toString","init","bind","on"],"mappings":"AAAA,aAyBAA,OAAO,qCAAsC,CAAC,SAAU,WAAY,SAAUC,EAAGC,GAC/E,IAAIC,EAAW,CACbC,KAAM,yBACNC,WAAY,oCACZC,SAAU,kCACVC,WAAY,oCACZC,cAAe,wCACfC,WAAY,oCACZC,UAAW,mCACXC,UAAW,mCACXC,eAAgB,yCA6DlB,SAASC,IAtDT,IACMC,EAUAC,EACAC,EA2CJd,EAAMe,SAASd,EAASC,KAlC1B,WACE,IAAIc,EAAajB,EAAE,UAAUkB,OAAOhB,EAASE,WAAY,OAAOe,MAE9C,YAAdF,GAA0C,IAAdA,IAC9BA,EAAa,UAGf,IAAIG,EAAWpB,EAAE,UAAUkB,OAAOhB,EAASG,SAAU,OAAOc,MACxDE,EAAarB,EAAE,UAAUkB,OAAOhB,EAASI,WAAY,OAAOa,MAC5DG,EAAgBtB,EAAE,UAAUkB,OAAOhB,EAASK,cAAe,OAAOY,MAClEI,EAAavB,EAAE,UAAUkB,OAAOhB,EAASM,WAAY,OAAOW,MAC5DK,EAAU,uEAAuEN,OAAOD,EAAWQ,WAAW,IAAK,KAAM,qEAAqEP,OAAOE,EAAU,yCAAyCF,OAAOI,EAAe,wEAAyEJ,OAAOD,EAAY,gDAAiDC,OAAOK,EAAY,oCAAoCL,OAAOG,EAAY,8BAeze,MAXgB,KAFhBD,EAAWpB,EAAE,UAAUkB,OAAOhB,EAASG,SAAU,cAAcc,SAG7DK,GAAW,qDAAqDN,OAAOjB,EAAMyB,YAAYC,OAAS,EAAG,wBAAwBT,OAAOjB,EAAMyB,YAAYE,OAAQ,0EAA0EV,OAAOE,EAAU,gEAM3O,KAFhBA,EAAWpB,EAAE,UAAUkB,OAAOhB,EAASG,SAAU,cAAcc,SAG7DK,GAAW,qDAAqDN,OAAOjB,EAAMyB,YAAYC,OAAQ,0EAA0ET,OAAOE,EAAU,gEAGvLI,EAQuBK,IAC9B5B,EAAMe,SAASd,EAASO,WAvDpBI,EAAQb,EAAE,UAAUkB,OAAOhB,EAASO,UAAW,OAAOqB,SAAS,OAAOC,WACnE,+HAA+Hb,OAAOL,EAAO,0FAA4FK,OAAOL,EAAO,8RAuD9PZ,EAAMe,SAASd,EAASQ,WA9CpBI,EAAYd,EAAE,UAAUkB,OAAOhB,EAASQ,UAAW,OAAOoB,SAAS,OAAOC,WAC1EhB,EAAiBf,EAAE,UAAUkB,OAAOhB,EAASS,eAAgB,OAAOmB,SAAS,OAAOC,WACjF,6CAA6Cb,OAAOJ,EAAW,oEAAoEI,OAAOH,EAAgB,gCA6DnK,MAAO,CACLiB,KAXF,WAEEhC,EAAE,wBAAwBkB,OAAOhB,EAASO,UAAW,4BAA4BS,OAAOhB,EAASQ,UAAW,4BAA4BQ,OAAOhB,EAASS,eAAgB,iBAAiBsB,KAAK,gBAAiB,WAC7MrB,MAEFZ,EAAE,wBAAwBkB,OAAOhB,EAASG,SAAU,4BAA4Ba,OAAOhB,EAASG,SAAU,mCAAmCa,OAAOhB,EAASG,SAAU,mCAAmCa,OAAOhB,EAASI,WAAY,4BAA4BY,OAAOhB,EAASK,cAAe,4BAA4BW,OAAOhB,EAASM,WAAY,4BAA4BU,OAAOhB,EAASE,WAAY,iBAAiB8B,GAAG,QAAS,WAC5atB,OAMFA,MAAOA","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Theme customizer global-body js\n *\n * @package   theme_remui/customizer\n * @copyright (c) 2021 WisdmLabs (https://wisdmlabs.com/) <support@wisdmlabs.com>\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @author    Yogesh Shirsath\n */\n\ndefine('theme_remui/customizer/global-body', ['jquery', './utils'], function($, Utils) {\n\n    var SELECTOR = {\n        BASE: 'global-typography-body',\n        FONTFAMILY: 'global-typography-body-fontfamily',\n        FONTSIZE: 'global-typography-body-fontsize',\n        FONTWEIGHT: 'global-typography-body-fontweight',\n        TEXTTRANSFORM: \"global-typography-body-text-transform\",\n        LINEHEIGHT: \"global-typography-body-lineheight\",\n        TEXTCOLOR: \"global-typography-body-textcolor\",\n        LINKCOLOR: \"global-typography-body-linkcolor\",\n        LINKHOVERCOLOR: \"global-typography-body-linkhovercolor\"\n    };\n\n    /**\n     * Get body text color css content.\n     * @returns {String}\n     */\n    function getTextColorContent() {\n        let color = $(`[name='${SELECTOR.TEXTCOLOR}']`).spectrum('get').toString();\n        return `\n            body, input:not([class*='btn-']), select, .dropdown-item, .text-muted, textarea, td {\n                color: ${color};\n            }\n            input[type=\"checkbox\"] {\n                border-color: ${color};\n            }\n            .btn-outline-secondary:not(:disabled):not(.disabled).active,\n            .btn-outline-secondary:not(:disabled):not(.disabled):active,\n            .show>.btn-outline-secondary.dropdown-toggle {\n                color: white;\n            }\n        `;\n    }\n\n    /**\n     * Get body link color css content.\n     * @returns {String}\n     */\n    function getLinkColorContent() {\n        let linkColor = $(`[name='${SELECTOR.LINKCOLOR}']`).spectrum('get').toString();\n        let linkHoverColor = $(`[name='${SELECTOR.LINKHOVERCOLOR}']`).spectrum('get').toString();\n        return `\n            a {\n                color: ${linkColor};\n            }\n            a:hover {\n                color: ${linkHoverColor};\n            }\n        `;\n    }\n\n    /**\n     * Get site body content.\n     * @return {string} site body content\n     */\n    function getContent() {\n        let fontfamily = $(`[name='${SELECTOR.FONTFAMILY}']`).val();\n        if (fontfamily == 'Standard' || fontfamily == '') {\n            fontfamily = 'Roboto';\n        }\n        let fontSize = $(`[name='${SELECTOR.FONTSIZE}']`).val();\n        let fontWeight = $(`[name='${SELECTOR.FONTWEIGHT}']`).val();\n        let textTransform = $(`[name='${SELECTOR.TEXTTRANSFORM}']`).val();\n        let lineHeight = $(`[name='${SELECTOR.LINEHEIGHT}']`).val();\n\n        let content = `\n            @import url('https://fonts.googleapis.com/css2?family=${fontfamily.replaceAll(' ', '+')}&display=swap');\n            html {\n                font-size: ${fontSize}px;\n                text-transform: ${textTransform};\n            }\n            body {\n                font-family: \"${fontfamily}\",sans-serif;\n                line-height: ${lineHeight};\n                font-weight: ${fontWeight};\n            }\n        `;\n\n        // Tablet.\n        fontSize = $(`[name='${SELECTOR.FONTSIZE}-tablet']`).val();\n        if (fontSize != '') {\n            content += `\\n\n                @media screen and (min-width: ${Utils.deviceWidth.mobile + 1}px) and (max-width: ${Utils.deviceWidth.tablet}px) {\n                    html {\n                        font-size: ${fontSize}px;\n                    }\n                }\n            `;\n        }\n\n        // Mobile.\n        fontSize = $(`[name='${SELECTOR.FONTSIZE}-mobile']`).val();\n        if (fontSize != '') {\n            content += `\\n\n                @media screen and (max-width: ${Utils.deviceWidth.mobile}px) {\n                    html {\n                        font-size: ${fontSize}px;\n                    }\n                }\n            `;\n        }\n        return content;\n    }\n\n    /**\n     * Apply settings.\n     */\n    function apply() {\n        Utils.putStyle(SELECTOR.BASE, getContent());\n        Utils.putStyle(SELECTOR.TEXTCOLOR, getTextColorContent());\n        Utils.putStyle(SELECTOR.LINKCOLOR, getLinkColorContent());\n    }\n\n    /**\n     * Initialize events.\n     */\n    function init() {\n\n        // Color observer.\n        $(`\n            [name='${SELECTOR.TEXTCOLOR}'],\n            [name='${SELECTOR.LINKCOLOR}'],\n            [name='${SELECTOR.LINKHOVERCOLOR}']\n        `).bind('color.changed', function() {\n            apply();\n        });\n\n        $(`\n            [name='${SELECTOR.FONTSIZE}'],\n            [name='${SELECTOR.FONTSIZE}-tablet'],\n            [name='${SELECTOR.FONTSIZE}-mobile'],\n            [name='${SELECTOR.FONTWEIGHT}'],\n            [name='${SELECTOR.TEXTTRANSFORM}'],\n            [name='${SELECTOR.LINEHEIGHT}'],\n            [name='${SELECTOR.FONTFAMILY}']\n        `).on('input', function() {\n            apply();\n        });\n    }\n\n    return {\n        init: init,\n        apply: apply\n    };\n});\n"],"file":"global-body.min.js"}